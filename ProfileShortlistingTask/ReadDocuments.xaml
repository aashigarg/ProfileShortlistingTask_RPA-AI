<Activity mc:Ignorable="sap sap2010" x:Class="ReadDocuments" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_attachments" Type="InArgument(scg:IEnumerable(x:String))" />
    <x:Property Name="out_requiredDetails" Type="OutArgument(scg:Dictionary(x:String, s:String[]))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1606,2083</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReadDocuments_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Read all the document attachments - PDF/ Docx file, and save the resultant info in dictionary." DisplayName="ReadDocuments" sap:VirtualizedContainerService.HintSize="1616,1878" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_extractedText" />
      <Variable x:TypeArguments="x:String" Name="strMobile" />
      <Variable x:TypeArguments="x:String" Name="strName" />
      <Variable x:TypeArguments="x:String" Name="strEmail" />
      <Variable x:TypeArguments="x:String" Name="strExperience" />
      <Variable x:TypeArguments="x:String" Name="strStatus" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1574,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Total number of attachments saved: &quot;+in_attachments.Count.ToString]" />
    <Assign sap:VirtualizedContainerService.HintSize="1574,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[out_requiredDetails]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[New Dictionary(Of string, string())]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1574,1524" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[index]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1536,1296" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_attachments]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="doc" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="1500,1162" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[doc.ToLower.Contains(&quot;.pdf&quot;)]" sap:VirtualizedContainerService.HintSize="1458,1070" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="440,456" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[doc]" sap:VirtualizedContainerService.HintSize="398,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_3" Range="All" Text="[str_extractedText]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FilterResume workflow" sap:VirtualizedContainerService.HintSize="398,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="FilterResume.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ExtractedText">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_extractedText" />
                          </InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Mobile">
                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strMobile" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Name">
                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strName" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Experience">
                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strExperience" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Email">
                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strEmail" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_Status">
                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strStatus" />
                          </OutArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_indexOfDoc">
                            <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="index" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <maes:AddToDictionary x:TypeArguments="x:String, s:String[]" Dictionary="[out_requiredDetails]" DisplayName="Add" sap:VirtualizedContainerService.HintSize="398,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[strName]" Value="[{strEmail, strMobile, strExperience, strStatus}]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="973,922" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[doc.ToLower.Contains(&quot;.docx&quot;)]" sap:VirtualizedContainerService.HintSize="931,830" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="552,682" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[doc]" sap:VirtualizedContainerService.HintSize="510,285" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                              <p:WordApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WordDocument">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,176" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <p:WordReadText DisplayName="Read Text" sap:VirtualizedContainerService.HintSize="434,84" sap2010:WorkflowViewState.IdRef="WordReadText_1" Text="[str_extractedText]" />
                                  </Sequence>
                                </ActivityAction>
                              </p:WordApplicationScope.Body>
                            </p:WordApplicationScope>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FilterResume workflow" sap:VirtualizedContainerService.HintSize="510,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="FilterResume.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_ExtractedText">
                                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_extractedText" />
                                </InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Mobile">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strMobile" />
                                </OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Name">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strName" />
                                </OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Experience">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strExperience" />
                                </OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Email">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strEmail" />
                                </OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Status">
                                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strStatus" />
                                </OutArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="in_indexOfDoc">
                                  <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="index" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <maes:AddToDictionary x:TypeArguments="x:String, s:String[]" Dictionary="[out_requiredDetails]" DisplayName="Add " sap:VirtualizedContainerService.HintSize="510,138" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="[strName]" Value="[{strEmail, strMobile, strExperience, strStatus}]" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;The attachment file is neither doc or pdf, please check.&quot;]" />
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1540,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,282" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;An exception occured while accessing Resume docs: &quot;+exception.Message.ToString]" />
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;An exception occured while accessing Resume docs: &quot;+exception.Message.ToString]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>